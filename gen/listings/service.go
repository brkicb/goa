// Code generated by goa v3.16.1, DO NOT EDIT.
//
// listings service
//
// Command:
// $ goa gen listings.com/design

package listings

import (
	"context"
)

// The listings service provides operations on managing house listings.
type Service interface {
	// Retrieve a list of all listings
	List(context.Context) (res []*Listing, err error)
	// Create a listing
	Add(context.Context, *Listing) (err error)
	// Retrieve a single listing
	Get(context.Context, *GetPayload) (res *Listing, err error)
	// Update a listing
	Update(context.Context, *UpdatePayload) (err error)
	// Delete a listing
	Delete(context.Context, *DeletePayload) (err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "listings"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "listings"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [5]string{"list", "add", "get", "update", "delete"}

// DeletePayload is the payload type of the listings service delete method.
type DeletePayload struct {
	// Unique identifier of the listing
	Slug string
}

// GetPayload is the payload type of the listings service get method.
type GetPayload struct {
	// Unique identifier of the listing
	Slug string
}

// Listing is the payload type of the listings service add method.
type Listing struct {
	// Unique identifier of the listing
	ID *int64
	// Unique identifier of the listing
	Slug string
	// Address of the house
	Address string
	// Price of the house
	Price int64
}

// UpdatePayload is the payload type of the listings service update method.
type UpdatePayload struct {
	// Unique identifier of the listing
	Slug    string
	Listing *Listing
}
